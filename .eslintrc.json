{
  "extends": [
    "standard"
  ],
  "overrides": [
    {
      "extends": "standard-with-typescript",
      "files": ["**/*.ts"],
      "parserOptions": {
        "project": "./tsconfig.eslint.json"
      },
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/array-type": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-unused-vars": "off", // typescript does this better
        "@typescript-eslint/prefer-nullish-coalescing": ["error", { "ignoreConditionalTests": true }], // this is supposed to be the default but apparently standard-with-typescript overrode it to something stupid
        "@typescript-eslint/require-await": "off",
        "@typescript-eslint/restrict-template-expressions": ["error", { "allowAny": true }], // `${myVar}` is fine if myVar is `any`
        "@typescript-eslint/return-await": ["error", "always"],
        "@typescript-eslint/strict-boolean-expressions": "off"
      }
    }
  ]
}
